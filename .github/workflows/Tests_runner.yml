name: Tests

on:
  push:
    branches: [ main ]
    tags:
      - v**

  workflow_dispatch:

jobs:
  Test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v2
        name: Setup Java
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: Tests
        run: mvn test


  Build:
    if: ${{ startsWith(github.ref, 'refs/tags/') }}
    runs-on: ubuntu-latest
    needs: Test

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v2
        name: Setup Java
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: package
        run: mvn package -Dmaven.test.skip=true

      - uses: actions/upload-artifact@v3
        name: Upload JAR Artifact
        with:
          name: JAR_Releases
          path: ./packages
          if-no-files-found: error


  Release:
    if: ${{ startsWith(github.ref, 'refs/tags/') }}
    runs-on: ubuntu-latest
    needs: Build

    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v3
        name: Download JAR artifact
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - uses: softprops/action-gh-release@v1
        name: Release new release
        with:
          files: ./JAR_Releases/*


  Cleanup:
    needs: [Build, Release]
    if: always()
    runs-on: ubuntu-latest

    steps:
    - name: call webhook to delete artifacts
      env:
        FOR_WEBHOOKS_SECRET: ${{ secrets.WEBHOOK_SECRET }}
      run: |
        echo "::add-mask::$FOR_WEBHOOKS_SECRET"
        curl --verbose --fail --show-error --location --request POST "https://api.github.com/repos/$GITHUB_REPOSITORY/dispatches" --header "Authorization: token $FOR_WEBHOOKS_SECRET" --header 'Content-Type: application/json' --header 'Accept: application/vnd.github.everest-preview+json' --data-raw "{ \"event_type\": \"delete_all_artifacts\", \"client_payload\": {\"parent_runid\": \"$GITHUB_RUN_ID\", \"parent_repo\": \"$GITHUB_REPOSITORY\"} }"
